c_stdlib_version:   # [osx and x86_64]
  - '11.0'          # [osx and x86_64]

# GCC 14 does not seem to be properly supported by either the codebase or CUDA 12.9, hence we use GCC 13.
# Note that those versions also have been added to the `.ci_support/migrations/cuda129.yaml` file
# for consistency (see the comment there).
c_compiler_version:            # [(linux and (x86_64 or aarch64)) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 13                         # [(linux and (x86_64 or aarch64)) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

cxx_compiler_version:          # [(linux and (x86_64 or aarch64)) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 13                         # [(linux and (x86_64 or aarch64)) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

fortran_compiler_version:      # [(linux and (x86_64 or aarch64)) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 13                         # [(linux and (x86_64 or aarch64)) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

blas_impl:
  - mkl        # [(linux and not aarch64) or win]
  - openblas   # [linux and aarch64]
  - accelerate # [osx]
